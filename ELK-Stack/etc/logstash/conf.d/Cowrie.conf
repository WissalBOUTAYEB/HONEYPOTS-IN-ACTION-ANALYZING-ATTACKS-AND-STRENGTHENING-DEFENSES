
input {
  file {
    path => "/opt/cowrie/var/log/cowrie/cowrie.json"  # Path to JSON log file
    start_position => "beginning"
    sincedb_path => "/dev/null"  # Prevents Logstash from skipping logs
    codec => "json"  # Parse input as JSON
    type => "cowrie"  # Tag logs as cowrie type for easy filtering
  }
}

filter {
  # Ensure only Cowrie logs are processed
  if [type] == "cowrie" {

    # Ensure @timestamp is parsed correctly
    date {
      match => ["@timestamp", "ISO8601"]
      target => "@timestamp"
    }

    # Remove %interface part from IPv6 addresses (optional)
    mutate {
      gsub => [
        "remote_host", "%.*", ""
      ]
    }

    # Convert IPv4-mapped IPv6 addresses to IPv4 (optional)
    mutate {
      gsub => [
        "remote_host", "^::ffff:", ""
      ]
    }

    # Extract IP and port separately for IPv6 or combined format
    grok {
      match => { 
        "remote_host" => "\[%{IP:remote_ip}\]:%{NUMBER:remote_port}" 
      }
      overwrite => ["remote_host"]
    }

    # Extract destination IP and port from the relevant fields if available
    mutate {
      add_field => {
        "[connection_info][source_ip]" => "%{remote_ip}"
        "[connection_info][source_port]" => "%{remote_port}"
        "[connection_info][destination_ip]" => "%{local_host}"
        "[connection_info][destination_port]" => "%{local_port}"
      }
    }

    # Add additional fields for attack identification
    mutate {
      add_field => {
        "attack_timestamp" => "%{@timestamp}"
        "attack_type" => "%{eventid}"
      }
    }

    # Remove placeholders if fields were not populated
    mutate {
      remove_field => ["remote_host", "remote_port", "local_host", "local_port"]
    }

    # Add metadata for index naming
    mutate {
      add_field => { "[@metadata][index]" => "cowrie-logs-%{+YYYY.MM.dd}" }
    }

    # Specific processing based on eventid
    if [eventid] == "cowrie.login.failed" {
      mutate {
        add_field => {
          "attack_type" => "SSH Brute Force"
        }
      }
    }

    if [eventid] == "cowrie.session.closed" {
      mutate {
        add_field => {
          "duration" => "%{duration}"
        }
      }
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]  # Adjust if Elasticsearch is on another server
    index => "cowrie-logs-%{+YYYY.MM.dd}"  # Index Cowrie logs by date
  }

  stdout { codec => rubydebug }  # For debugging purposes
}
